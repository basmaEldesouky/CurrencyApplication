plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.data'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        all {
            buildConfigField "long", "API_KEY", API_KEY
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':domain')

    // Core
    api "androidx.core:core-ktx:$androidx_core_ktx"
    api "androidx.appcompat:appcompat:$androidx_appcompat"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //okhttp
    api "com.squareup.okhttp3:logging-interceptor:$okhttp3_logging_interceptor"

    //retrofit
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_adapter_rxjava2"
    api "com.squareup.retrofit2:converter-gson:$retrofit2_converter_gson"
    api "com.squareup.retrofit2:retrofit:$retrofit2_retrofit"
    //coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_android"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_core"

    // for implement testing libraries
    testImplementation project.unitTestDependencies
}